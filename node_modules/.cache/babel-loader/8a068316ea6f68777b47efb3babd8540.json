{"remainingRequest":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\src\\components\\home\\home-contentFive.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\src\\components\\home\\home-contentFive.vue","mtime":1666275565926},{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665973319926},{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1665973308157},{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\babel-loader\\lib\\index.js","mtime":1665973384882},{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665973319926},{"path":"C:\\Users\\12486\\Desktop\\中软\\PopularizeLaw\\PopularizeLaw\\node_modules\\vue-loader\\lib\\index.js","mtime":1665973372199}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['lists'],\n  // 父组件传入数据， 数组形式 [ \"连雨不知春去\"，\"一晴方觉夏深\"]\n  data: function data() {\n    return {\n      text: '' // 数组文字转化后的字符串\n\n    };\n  },\n  methods: {\n    move: function move() {\n      // 获取文字text 的计算后宽度  （由于overflow的存在，直接获取不到，需要独立的node计算）\n      var width = document.getElementById('node').getBoundingClientRect().width;\n      var box = document.getElementById('box');\n      var copy = document.getElementById('copy');\n      copy.innerText = this.text; // 文字副本填充\n\n      var distance = 0; // 位移距离\n      // 设置位移\n\n      setInterval(function () {\n        distance = distance - 1; // 如果位移超过文字宽度，则回到起点\n\n        if (-distance >= width) {\n          distance = 16;\n        }\n\n        box.style.transform = 'translateX(' + distance + 'px)';\n      }, 40);\n    }\n  },\n  // 把父组件传入的arr转化成字符串\n  mounted: function mounted() {\n    for (var i = 0; i < this.lists.length; i++) {\n      this.text += ' ' + this.lists[i];\n    }\n  },\n  // 更新的时候运动\n  updated: function updated() {\n    this.move();\n  }\n};",{"version":3,"sources":["home-contentFive.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,OAAA,CADA;AACA;AACA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA,CACA;;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,MAAA,EAAA,qBAAA,GAAA,KAAA;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,KAAA,IAAA,CALA,CAKA;;AACA,UAAA,QAAA,GAAA,CAAA,CANA,CAMA;AACA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,QAAA,QAAA,GAAA,QAAA,GAAA,CAAA,CADA,CAEA;;AACA,YAAA,CAAA,QAAA,IAAA,KAAA,EAAA;AACA,UAAA,QAAA,GAAA,EAAA;AACA;;AACA,QAAA,GAAA,CAAA,KAAA,CAAA,SAAA,GAAA,gBAAA,QAAA,GAAA,KAAA;AACA,OAPA,EAOA,EAPA,CAAA;AAQA;AAjBA,GAPA;AA0BA;AACA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,WAAA,IAAA,IAAA,MAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA,GA/BA;AAgCA;AACA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,IAAA;AACA;AAnCA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n    <a href=\"https://qspfw.moe.gov.cn/html/gpjh/\"><img src=\"../../../static/img/zhongjian.jpg\" title=\"国培计划\" style=\"margin-left:17px;width:95%;height: 100px;\"></a>\r\n    \r\n    <div class=\"wrap\">\r\n      <div id=\"box\">\r\n        <div id=\"marquee\">{{text}}</div>\r\n        <div id=\"copy\"></div>\r\n      </div>\r\n      <div id=\"node\">{{text}}</div>\r\n    </div>\r\n</div>\r\n  </template>\r\n  <script>\r\n  export default {\r\n    props: ['lists'], // 父组件传入数据， 数组形式 [ \"连雨不知春去\"，\"一晴方觉夏深\"]\r\n    data () {\r\n      return {\r\n        text: '' // 数组文字转化后的字符串\r\n      }\r\n    },\r\n    methods: {\r\n      move () {\r\n        // 获取文字text 的计算后宽度  （由于overflow的存在，直接获取不到，需要独立的node计算）\r\n        let width = document.getElementById('node').getBoundingClientRect().width\r\n        let box = document.getElementById('box')\r\n        let copy = document.getElementById('copy')\r\n        copy.innerText = this.text // 文字副本填充\r\n        let distance = 0 // 位移距离\r\n        // 设置位移\r\n        setInterval(function () {\r\n          distance = distance - 1\r\n          // 如果位移超过文字宽度，则回到起点\r\n          if (-distance >= width) {\r\n            distance = 16\r\n          }\r\n          box.style.transform = 'translateX(' + distance + 'px)'\r\n        }, 40)\r\n      }\r\n    },\r\n    // 把父组件传入的arr转化成字符串\r\n    mounted: function () {\r\n      for (let i = 0; i < this.lists.length; i++) {\r\n        this.text += ' ' + this.lists[i]\r\n      }\r\n    },\r\n    // 更新的时候运动\r\n    updated: function () {\r\n      this.move()\r\n    }\r\n  }\r\n  </script>\r\n  <style scoped>\r\n    /*样式的话可以写*/\r\n    .wrap {\r\n      margin-top: 20px;\r\n      margin-left: 40px;\r\n      overflow: hidden;\r\n      background: rgb(165, 5, 5);\r\n      width:95%;\r\n      height:60px;\r\n      color: white;\r\n      text-align:center;\r\n      vertical-align: middle;\r\n      line-height: 60px;\r\n    }\r\n       #box {\r\n         width: 500%;\r\n       }\r\n       #box div {\r\n         float: left;\r\n       }\r\n       #marquee {\r\n         margin: 0 16px 0 0;\r\n       }\r\n       #node {\r\n         position: absolute;\r\n         z-index: -99;\r\n         top: -99px;\r\n       }\r\n  </style>\r\n  \r\n  "],"sourceRoot":"src/components/home"}]}